What is this ?
==============
Nancy.ServiceRouting is a library for the automatic discovery / wiring of
Attribute-Based Routes with NancyFX.

The Routes, Pipeline, Modules, Model Binders, etc. are all from Nancy - this
library is convention-based pure syntactic sugary goodness whose intention is
to allow a more OCP-friendly way to get Routes into Nancy.

See Nancy.Demo.ServiceRouting for a basic-but-functioning example.


In a Nutshell
=============
Setup your IoC container in your Bootstrapper to be able to resolve the
RouteRegistrar class, which is the Facade for the library.  There's even a
factory to help keep with Nancy's super-duper-happy-path:

    public class Bootstrapper: DefaultNancyBootstrapper
    {
        protected override void ConfigureApplicationContainer(
            TinyIoCContainer container)
        {
            base.ConfigureApplicationContainer(container);
            container.Register((ctx, args) =>
                RouteRegistrarFactory.CreateDefaultInstance(ctx.Resolve));
        }

        ...
    }

Create your DTOs and decorate them with your routes:

    [Route("/some/{awesome}/route", "GET", "PUT", ...)]
    public class RequestDto
    {
	public int Awesome { get; set; }
        ...
    }

Create your Services that use the decorated DTOs:

    public class SooperDooperService
    {
        public object DoSomethingCool(RequestDto request)
        {
            return ...;
        }
    }

Create your Nancy Module that discovers / registers the Services and Routes:

    public class ApiModule: NancyModule
    {
        public ApiModule(RouteRegistrar routes)
        {
            routes.RegisterServicesInto(
                this, typeof(SooperDooperService), typeof(...));
        }

        ...
    }

For a quickstart, that's all there is - Nancy handles all the View Resolution,
Content Negotiation and other Pipeline stuff in her usual way.
